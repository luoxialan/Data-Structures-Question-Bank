[
  {
    "type":"1",
    "content":"An algorithm that calls itself directly or indirectly is known as",
    "choices":[
      {
        "key":"1",
        "value":"Sub algorithm"
      },
      {
        "key":"2",
        "value":"Recursion"
      },
      {
        "key":"3",
        "value":"Polish notation"
      },
      {
        "key":"4",
        "value":"Traversal algorithm"
      }
    ],
    "answer":"",
    "tag":"Recurrence Relations"
  },
  {
    "type":"1",
    "content":"Linked list are not suitable data structure of which one of the following problems ?",
    "choices":[
      {
        "key":"1",
        "value":"Insertion sort"
      },
      {
        "key":"2",
        "value":"Binary search"
      },
      {
        "key":"3",
        "value":"Radix sort"
      },
      {
        "key":"4",
        "value":"Polynomial manipulation"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"Given two sorted lists of size m and n respectively.The number of comparisons needed in the worst case by the merge sort algorithm will be?",
    "choices":[
      {
        "key":"1",
        "value":"mn"
      },
      {
        "key":"2",
        "value":"max(m,n)"
      },
      {
        "key":"3",
        "value":"min(m,n)"
      },
      {
        "key":"4",
        "value":"m+n-1"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"In linked list each entry contains?\n",
    "choices":[
      {
        "key":"1",
        "value":"data"
      },
      {
        "key":"2",
        "value":"link"
      },
      {
        "key":"3",
        "value":"both data and link"
      },
      {
        "key":"4",
        "value":"no data and link"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"In Linked list implementation, a node carries information regarding _______.\n",
    "choices":[
      {
        "key":"1",
        "value":"Data"
      },
      {
        "key":"2",
        "value":"Data and link"
      },
      {
        "key":"3",
        "value":"Link"
      }
    ],
    "answer":"2",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"A linked list in which the last node of Linked list points to the first is called a _________.\n",
    "choices":[
      {
        "key":"1",
        "value":"Singly Linked List"
      },
      {
        "key":"2",
        "value":"Circular Linked List"
      },
      {
        "key":"3",
        "value":"Doubly Linked List"
      },
      {
        "key":"4",
        "value":"None of these"
      }
    ],
    "answer":"2",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"A doubly linked list performs traversal in _________.\n",
    "choices":[
      {
        "key":"1",
        "value":"Any direction"
      },
      {
        "key":"2",
        "value":"Cicular diection"
      },
      {
        "key":"3",
        "value":"Either direction"
      }
    ],
    "answer":"3",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"Linked list data structure usage offers considerable saving in\n",
    "choices":[
      {
        "key":"1",
        "value":"Space utilization & computational time."
      },
      {
        "key":"2",
        "value":"Computational time"
      },
      {
        "key":"3",
        "value":"Space utilization"
      }
    ],
    "answer":"1",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"Consider linked list is used to implement the Stack then which of the following node is considered as Top of the Stack ?",
    "choices":[
      {
        "key":"1",
        "value":"First Node"
      },
      {
        "key":"2",
        "value":"Last Node"
      },
      {
        "key":"3",
        "value":"Any Node"
      },
      {
        "key":"4",
        "value":"Middle Node"
      }
    ],
    "answer":"1",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"The link field in the last node of the linked list contains _________.",
    "choices":[
      {
        "key":"1",
        "value":"Link to the first node"
      },
      {
        "key":"2",
        "value":"Pointer to the next element location"
      },
      {
        "key":"3",
        "value":"Zero value"
      }
    ],
    "answer":"3",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"When new element is added in the middle of singly linked list then ________.",
    "choices":[
      {
        "key":"1",
        "value":"Only elements that appear before the new element need to be moved"
      },
      {
        "key":"2",
        "value":"Only elements that appear after the new element need to be moved"
      },
      {
        "key":"3",
        "value":"No need to move element"
      },
      {
        "key":"4",
        "value":"Only elements that appear after the new element and before need to be moved"
      }
    ],
    "answer":"3",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"Which of the following operation is performed more efficiently in doubly linked list ?",
    "choices":[
      {
        "key":"1",
        "value":"Inserting a node at given position"
      },
      {
        "key":"2",
        "value":"Inserting a node at given position"
      },
      {
        "key":"3",
        "value":"Deleting a node at given position"
      },
      {
        "key":"4",
        "value":"None of these"
      }
    ],
    "answer":"3",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"If in a linked list address of first node is 1020 then what will be the address of node at 5th position ?",
    "choices":[
      {
        "key":"1",
        "value":"1036"
      },
      {
        "key":"2",
        "value":"1028"
      },
      {
        "key":"3",
        "value":"1038"
      },
      {
        "key":"4",
        "value":"None of these"
      }
    ],
    "answer":"4",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"In Circular Linked List insertion of a node involves the modification of ____ links.",
    "choices":[
      {
        "key":"1",
        "value":"1"
      },
      {
        "key":"2",
        "value":"2"
      },
      {
        "key":"3",
        "value":"3"
      },
      {
        "key":"4",
        "value":"4"
      }
    ],
    "answer":"2",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"The linked list implementation of sparse matrices is superior to the generalized dope vector method because it is?",
    "choices":[
      {
        "key":"1",
        "value":"Conceptually easier"
      },
      {
        "key":"2",
        "value":"Completely dynamic"
      },
      {
        "key":"3",
        "value":"Efficient in accessing an entry"
      },
      {
        "key":"4",
        "value":"Efficient if the sparse matrix is a band matrix"
      },
      {
        "key":"5",
        "value":"Conceptually easier and Completely dynamic"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"Linked lists are suitable for which of the following problems ?",
    "choices":[
      {
        "key":"1",
        "value":"Insertion sort"
      },
      {
        "key":"2",
        "value":"Binary search"
      },
      {
        "key":"3",
        "value":"Radix sort"
      },
      {
        "key":"4",
        "value":"Polynomial manipulation"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"The value of first linked list address is ?",
    "choices":[
      {
        "key":"1",
        "value":"0"
      },
      {
        "key":"2",
        "value":"-1"
      },
      {
        "key":"3",
        "value":"1"
      },
      {
        "key":"4",
        "value":"None of Above"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"The situation in linked list START=NULL is called ?",
    "choices":[
      {
        "key":"1",
        "value":"Overflow"
      },
      {
        "key":"2",
        "value":"Underflow"
      },
      {
        "key":"3",
        "value":"Both of above"
      },
      {
        "key":"4",
        "value":"None of Above"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"The operation of processing each element in the list is known as",
    "choices":[
      {
        "key":"1",
        "value":"Sorting"
      },
      {
        "key":"2",
        "value":"Merging"
      },
      {
        "key":"3",
        "value":"Inserting"
      },
      {
        "key":"4",
        "value":"Traversal"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"Linked lists are best suited",
    "choices":[
      {
        "key":"1",
        "value":"for relatively permanent collections of data"
      },
      {
        "key":"2",
        "value":"for the size of the structure and the data in the structure are constantly changing"
      },
      {
        "key":"3",
        "value":"for both of above situation"
      },
      {
        "key":"4",
        "value":"for none of above situation"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"Which of the following data structure is not linear data structure?",
    "choices":[
      {
        "key":"1",
        "value":"Arrays"
      },
      {
        "key":"2",
        "value":"Linked lists"
      },
      {
        "key":"3",
        "value":"Both of above"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":"List"
  },
  {
    "type":"1",
    "content":"In the stack progress of inserting an element in the stack is called as",
    "choices":[
      {
        "key":"1",
        "value":"Create"
      },
      {
        "key":"2",
        "value":"Pop"
      },
      {
        "key":"3",
        "value":"Push"
      },
      {
        "key":"4",
        "value":"Evaluation"
      }
    ],
    "answer":"3",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Process of removing element form the stack is called as",
    "choices":[
      {
        "key":"1",
        "value":"Create"
      },
      {
        "key":"2",
        "value":"Push"
      },
      {
        "key":"3",
        "value":"Postfix Expression"
      },
      {
        "key":"4",
        "value":"Pop"
      }
    ],
    "answer":"4",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"In the stack, if user try to remove from the empty stack then it called as",
    "choices":[
      {
        "key":"1",
        "value":"Garbage Collection"
      },
      {
        "key":"2",
        "value":"Overflow of Stack"
      },
      {
        "key":"3",
        "value":"Underflow of Stack"
      },
      {
        "key":"4",
        "value":"Empty of Collection"
      }
    ],
    "answer":"2",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"User push 1 element in the stack having already five elements and having stack size as 5 then stack becomes",
    "choices":[
      {
        "key":"1",
        "value":"User flow"
      },
      {
        "key":"2",
        "value":"Underflow"
      },
      {
        "key":"3",
        "value":"Crash"
      },
      {
        "key":"4",
        "value":"Overflow"
      }
    ],
    "answer":"4",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Entries in a stack are \"ordered\". What is the meaning of this statement?",
    "choices":[
      {
        "key":"1",
        "value":"A collection of Stacks can be sorted."
      },
      {
        "key":"2",
        "value":"Stack entries may be compared with the '<' operation."
      },
      {
        "key":"3",
        "value":"The entries must be stored in a linked list."
      },
      {
        "key":"4",
        "value":"There is a first entry, a second entry, and so on."
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"The operation for adding an entry to a stack is traditionally called:",
    "choices":[
      {
        "key":"1",
        "value":"add"
      },
      {
        "key":"2",
        "value":"append"
      },
      {
        "key":"3",
        "value":"insert"
      },
      {
        "key":"4",
        "value":"push"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"The operation for removing an entry from a stack is traditionally called:",
    "choices":[
      {
        "key":"1",
        "value":"delete"
      },
      {
        "key":"2",
        "value":"peek"
      },
      {
        "key":"3",
        "value":"pop"
      },
      {
        "key":"4",
        "value":"remove"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Which of the following stack operations could result in stack underflow?",
    "choices":[
      {
        "key":"1",
        "value":"is_empty"
      },
      {
        "key":"2",
        "value":"pop"
      },
      {
        "key":"3",
        "value":"push"
      },
      {
        "key":"4",
        "value":"Two or more of the above answers"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Which of the following applications may use a stack?",
    "choices":[
      {
        "key":"1",
        "value":"A parentheses balancing program."
      },
      {
        "key":"2",
        "value":"Keeping track of local variables at run time."
      },
      {
        "key":"3",
        "value":"Syntax analyzer for a compiler."
      },
      {
        "key":"4",
        "value":"All of the above."
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Consider the usual algorithm for determining whether a sequence of parentheses is balanced. What is the maximum number of parentheses that will appear on the stack AT ANY ONE TIME when the algorithm analyzes: (()(())(()))?",
    "choices":[
      {
        "key":"1",
        "value":"1"
      },
      {
        "key":"2",
        "value":"2"
      },
      {
        "key":"3",
        "value":"3"
      },
      {
        "key":"4",
        "value":"4"
      },
      {
        "key":"5",
        "value":"5 or more"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Consider the usual algorithm for determining whether a sequence of parentheses is balanced. Suppose that you run the algorithm on a sequence that contains 2 left parentheses and 3 right parentheses (in some order). What is the maximum number of parentheses that will ever appear on the stack AT ONE TIME during the computation?",
    "choices":[
      {
        "key":"1",
        "value":"1"
      },
      {
        "key":"2",
        "value":"2"
      },
      {
        "key":"3",
        "value":"3"
      },
      {
        "key":"4",
        "value":"4"
      },
      {
        "key":"5",
        "value":"5 or more"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Suppose we have an array implementation of the stack class, with ten items in the stack stored at data[0] through data[9]. The CAPACITY is 42. Where does the push method place the new entry in the array?",
    "choices":[
      {
        "key":"1",
        "value":"data[0]"
      },
      {
        "key":"2",
        "value":"data[1]"
      },
      {
        "key":"3",
        "value":"data[9]"
      },
      {
        "key":"4",
        "value":"data[10]"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Consider the implementation of the Stack using a partially-filled array. What goes wrong if we try to store the top of the Stack at location [0] and the bottom of the Stack at the last used position of the array?",
    "choices":[
      {
        "key":"1",
        "value":"Both peek and pop would require linear time."
      },
      {
        "key":"2",
        "value":"Both push and pop would require linear time."
      },
      {
        "key":"3",
        "value":"The Stack could not be used to check balanced parentheses."
      },
      {
        "key":"4",
        "value":"The Stack could not be used to evaluate postfix expressions."
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"In the linked list implementation of the stack class, where does the push method place the new entry on the linked list?",
    "choices":[
      {
        "key":"1",
        "value":"At the head"
      },
      {
        "key":"2",
        "value":"At the tail"
      },
      {
        "key":"3",
        "value":"After all other entries that are greater than the new entry."
      },
      {
        "key":"4",
        "value":"After all other entries that are smaller than the new entry."
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"In the array version of the Stack class, which operations require linear time for their worst-case behavior?",
    "choices":[
      {
        "key":"1",
        "value":"is_empty"
      },
      {
        "key":"2",
        "value":"peek"
      },
      {
        "key":"3",
        "value":"pop"
      },
      {
        "key":"4",
        "value":"push when the stack is below capacity"
      },
      {
        "key":"5",
        "value":"None of these operations require linear time."
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"In the linked-list version of the Stack class, which operations require linear time for their worst-case behavior?",
    "choices":[
      {
        "key":"1",
        "value":"is_empty"
      },
      {
        "key":"2",
        "value":"peek"
      },
      {
        "key":"3",
        "value":"pop"
      },
      {
        "key":"4",
        "value":"push"
      },
      {
        "key":"5",
        "value":"None of these operations require linear time."
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"What is the value of the postfix expression 6 3 2 4 + - *:",
    "choices":[
      {
        "key":"1",
        "value":"Something between -15 and -100"
      },
      {
        "key":"2",
        "value":"Something between -5 and -15"
      },
      {
        "key":"3",
        "value":"Something between 5 and -5"
      },
      {
        "key":"4",
        "value":"Something between 5 and 15"
      },
      {
        "key":"5",
        "value":"Something between 15 and 100"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Here is an infix expression: 4+3*(6*3-12). Suppose that we are using the usual Stack algorithm to convert the expression from infix to postfix notation. What is the maximum number of symbols that will appear on the stack AT ONE TIME during the conversion of this expression?",
    "choices":[
      {
        "key":"1",
        "value":"1"
      },
      {
        "key":"2",
        "value":"2"
      },
      {
        "key":"3",
        "value":"3"
      },
      {
        "key":"4",
        "value":"4"
      },
      {
        "key":"5",
        "value":"5"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Which one of the following permutations can be obtained the output using stack assuming that the input is the sequence 1,2,3,4,5 in that order ?",
    "choices":[
      {
        "key":"1",
        "value":"3,4,5,1,2"
      },
      {
        "key":"2",
        "value":"3,4,5,2,1"
      },
      {
        "key":"3",
        "value":"1,5,2,3,4"
      },
      {
        "key":"4",
        "value":"5,4,3,1,2"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"The following sequence of operation is performed on stack : push(1),push(2),pop,push(1),push(2),pop,pop,pop,push(2),pop. The sequence of popped out values are ?",
    "choices":[
      {
        "key":"1",
        "value":"2,2,1,1,2"
      },
      {
        "key":"2",
        "value":"2,2,1,2,2"
      },
      {
        "key":"3",
        "value":"2,1,2,2,1"
      },
      {
        "key":"4",
        "value":"2,1,2,2,2"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"In a stack, ___",
    "choices":[
      {
        "key":"1",
        "value":"You can access the element which is entered at last"
      },
      {
        "key":"2",
        "value":"You can access the element which is entered at begining"
      },
      {
        "key":"3",
        "value":"You can access the element from any position"
      },
      {
        "key":"4",
        "value":"all of above"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"User perform following operations on stack of size 5 then - push(1);\npop();\npush(2);\npush(3);\npop();\npush(4);\npop();\npop();\npush(5);\nat the end of last operation, total number of elements present in the stack are -\n",
    "choices":[
      {
        "key":"1",
        "value":"3"
      },
      {
        "key":"2",
        "value":"1"
      },
      {
        "key":"3",
        "value":"2"
      },
      {
        "key":"4",
        "value":"4"
      }
    ],
    "answer":"2",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"In order to keep track of current topmost element of the stack we need to maintain one variable.",
    "choices":[
      {
        "key":"1",
        "value":"FALSE"
      },
      {
        "key":"2",
        "value":"TRUE"
      }
    ],
    "answer":"2",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"User perform following operations on stack of size 5 then\npush(1);\npop();\npush(2);\npush(3);\npop();\npush(2);\npop();\npop();\npush(4);\npop();\npop();\npush(5);\nWhich of the following is correct statement for stack ?\n",
    "choices":[
      {
        "key":"1",
        "value":"Underflow Occure"
      },
      {
        "key":"2",
        "value":"Overflow Occures"
      },
      {
        "key":"3",
        "value":"None of these"
      },
      {
        "key":"4",
        "value":"Stack Operations will be performed Smoothly"
      }
    ],
    "answer":"1",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"If the sequence of operations - push(1), push(2), pop, push(1), push(2), pop, pop, pop, push(2), pop are performed on a stack, the sequence of popped out values are ?",
    "choices":[
      {
        "key":"1",
        "value":"2, 2, 1, 1, 2"
      },
      {
        "key":"2",
        "value":"2, 2, 1, 2, 2"
      },
      {
        "key":"3",
        "value":"2, 1, 2, 2, 1"
      },
      {
        "key":"4",
        "value":"2, 1, 2, 2, 2"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"The terms PUSH and POP are related to ?",
    "choices":[
      {
        "key":"1",
        "value":"Arrays"
      },
      {
        "key":"2",
        "value":"Stacks"
      },
      {
        "key":"3",
        "value":" Linked List"
      },
      {
        "key":"4",
        "value":"None"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"Which of the following data structure is non-linear type?",
    "choices":[
      {
        "key":"1",
        "value":"Strings"
      },
      {
        "key":"2",
        "value":"Lists"
      },
      {
        "key":"3",
        "value":"Stacks"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"The terms PUSH and POP are related to ?",
    "choices":[
      {
        "key":"1",
        "value":"Arrays"
      },
      {
        "key":"2",
        "value":"Stacks"
      },
      {
        "key":"3",
        "value":"Linked List"
      },
      {
        "key":"4",
        "value":"None"
      }
    ],
    "answer":"",
    "tag":"Stack"
  },
  {
    "type":"1",
    "content":"The initial configuration of the queue is a,b,c,d (a is the front end). To get the configuration d,c,b,a one needs a minimum of",
    "choices":[
      {
        "key":"1",
        "value":"2 deletions and 3 additions"
      },
      {
        "key":"2",
        "value":"3 additions and 2 deletions"
      },
      {
        "key":"3",
        "value":"3 additions and 3 deletions"
      },
      {
        "key":"4",
        "value":"3 additions and 4 deletions"
      }
    ],
    "answer":"",
    "tag":"Queue"
  },
  {
    "type":"1",
    "content":"Which of the following is the feature of queue?",
    "choices":[
      {
        "key":"1",
        "value":"LIFO"
      },
      {
        "key":"2",
        "value":"FILO"
      },
      {
        "key":"3",
        "value":"FIFO"
      },
      {
        "key":"4",
        "value":"None"
      }
    ],
    "answer":"",
    "tag":"Queue"
  },
  {
    "type":"1",
    "content":"Queue can be used to implement ?",
    "choices":[
      {
        "key":"1",
        "value":"radix sort"
      },
      {
        "key":"2",
        "value":"quick sort"
      },
      {
        "key":"3",
        "value":"recursion"
      },
      {
        "key":"4",
        "value":"depth first search"
      }
    ],
    "answer":"",
    "tag":"Queue"
  },
  {
    "type":"1",
    "content":"Which of the following data structure is linear type?",
    "choices":[
      {
        "key":"1",
        "value":"Strings"
      },
      {
        "key":"2",
        "value":"Lists"
      },
      {
        "key":"3",
        "value":"Queues"
      },
      {
        "key":"4",
        "value":"All of above"
      }
    ],
    "answer":"",
    "tag":"Queue"
  },
  {
    "type":"1",
    "content":"Which of the following is useful in traversing a given graph by breadth first search?",
    "choices":[
      {
        "key":"1",
        "value":"Stack"
      },
      {
        "key":"2",
        "value":"Set"
      },
      {
        "key":"3",
        "value":"List"
      },
      {
        "key":"4",
        "value":"Queue"
      }
    ],
    "answer":"",
    "tag":"Graph"
  },
  {
    "type":"1",
    "content":"Which of the following data structure is linear data structure?",
    "choices":[
      {
        "key":"1",
        "value":"Trees"
      },
      {
        "key":"2",
        "value":"Graphs"
      },
      {
        "key":"3",
        "value":"Arrays"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":"Graph"
  },
  {
    "type":"1",
    "content":"In a graph if e=[u, v], Then u and v are called",
    "choices":[
      {
        "key":"1",
        "value":"endpoints of e"
      },
      {
        "key":"2",
        "value":"adjacent nodes"
      },
      {
        "key":"3",
        "value":"neighbors"
      },
      {
        "key":"4",
        "value":"all of above"
      }
    ],
    "answer":"",
    "tag":"Graph"
  },
  {
    "type":"1",
    "content":"A connected graph T without any cycles is called",
    "choices":[
      {
        "key":"1",
        "value":"a tree graph"
      },
      {
        "key":"2",
        "value":"free tree"
      },
      {
        "key":"3",
        "value":"a tree"
      },
      {
        "key":"4",
        "value":"All of above"
      }
    ],
    "answer":"",
    "tag":"Graph"
  },
  {
    "type":"1",
    "content":"In a graph if e=(u, v) means",
    "choices":[
      {
        "key":"1",
        "value":"u is adjacent to v but v is not adjacent to u"
      },
      {
        "key":"2",
        "value":"e begins at u and ends at v"
      },
      {
        "key":"3",
        "value":"u is processor and v is successor"
      },
      {
        "key":"4",
        "value":"both e begins at u and ends at v and u is processor and v is successor"
      }
    ],
    "answer":"",
    "tag":"Graph"
  },
  {
    "type":"1",
    "content":"If every node u in G is adjacent to every other node v in G, A graph is said to be",
    "choices":[
      {
        "key":"1",
        "value":"isolated"
      },
      {
        "key":"2",
        "value":"complete"
      },
      {
        "key":"3",
        "value":"finite"
      },
      {
        "key":"4",
        "value":"strongly connected"
      }
    ],
    "answer":"",
    "tag":"Graph"
  },
  {
    "type":"1",
    "content":"_____ is one of the fastest ways to store and retrive data",
    "choices":[
      {
        "key":"1",
        "value":"Sorting"
      },
      {
        "key":"2",
        "value":"Hashing"
      },
      {
        "key":"3",
        "value":"Indexing"
      },
      {
        "key":"4",
        "value":"both hashing and indexing"
      }
    ],
    "answer":"",
    "tag":"Hash"
  },
  {
    "type":"1",
    "content":"The average search time of hashing with linear probing will be less if the load factor ?",
    "choices":[
      {
        "key":"1",
        "value":"is far less than one"
      },
      {
        "key":"2",
        "value":"equals one"
      },
      {
        "key":"3",
        "value":"is far greater than one"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":"Hash"
  },
  {
    "type":"1",
    "content":"In a Heap tree",
    "choices":[
      {
        "key":"1",
        "value":"Values in a node is greater than every value in left sub tree and smaller than right sub tree"
      },
      {
        "key":"2",
        "value":"Values in a node is greater than every value in children of it"
      },
      {
        "key":"3",
        "value":"Both of above conditions applies"
      },
      {
        "key":"4",
        "value":"None of above conditions applies"
      }
    ],
    "answer":"",
    "tag":"Heap"
  },
  {
    "type":"1",
    "content":"What is the meaning of FIFO?",
    "choices":[
      {
        "key":"1",
        "value":"First In Fast Out"
      },
      {
        "key":"2",
        "value":"Fast In First Out"
      },
      {
        "key":"3",
        "value":"First In First Out"
      },
      {
        "key":"4",
        "value":"None of the above"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Which of the following can be used as a criterion for classification of data structures used in language processing?",
    "choices":[
      {
        "key":"1",
        "value":"nature of a data structure"
      },
      {
        "key":"2",
        "value":"lifetime of a data structure"
      },
      {
        "key":"3",
        "value":"purpose of a data structure"
      },
      {
        "key":"4",
        "value":"all"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Which of the following is not a logical data structure?",
    "choices":[
      {
        "key":"1",
        "value":"tree"
      },
      {
        "key":"2",
        "value":"list"
      },
      {
        "key":"3",
        "value":"stack"
      },
      {
        "key":"4",
        "value":"chain"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"FIFO is used in?",
    "choices":[
      {
        "key":"1",
        "value":"Queue"
      },
      {
        "key":"2",
        "value":"Stack"
      },
      {
        "key":"3",
        "value":"Linked List"
      },
      {
        "key":"4",
        "value":"Tree"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Items can be removed from the both end of?",
    "choices":[
      {
        "key":"1",
        "value":"Stack"
      },
      {
        "key":"2",
        "value":"Queue"
      },
      {
        "key":"3",
        "value":"Tree"
      },
      {
        "key":"4",
        "value":"Deque"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Which of the following algorithm solves the all pair shortest path problem ?",
    "choices":[
      {
        "key":"1",
        "value":"Dijkstra's algorithm"
      },
      {
        "key":"2",
        "value":"Floyd's algorithm"
      },
      {
        "key":"3",
        "value":"Prim's algorithm"
      },
      {
        "key":"4",
        "value":"Warshall's algorithm"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The average successful search time for sequential search on 'n' itemsis ?",
    "choices":[
      {
        "key":"1",
        "value":"n/2"
      },
      {
        "key":"2",
        "value":"(n - 1)/2"
      },
      {
        "key":"3",
        "value":"(n + 2)/2"
      },
      {
        "key":"4",
        "value":"log(n) + 1"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The principal of locality justifies the use of ?",
    "choices":[
      {
        "key":"1",
        "value":"Interrupts"
      },
      {
        "key":"2",
        "value":"DMA"
      },
      {
        "key":"3",
        "value":"Polling"
      },
      {
        "key":"4",
        "value":"Cache memory"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"What is Data Structure ?",
    "choices":[
      {
        "key":"1",
        "value":"Way to organize data"
      },
      {
        "key":"2",
        "value":"Accessing of data elements in specified manner"
      },
      {
        "key":"3",
        "value":"Organization of mathematical and logical concepts"
      },
      {
        "key":"4",
        "value":"All of Above"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Which operation is not possible on Data Structure ?",
    "choices":[
      {
        "key":"1",
        "value":"Traversing"
      },
      {
        "key":"2",
        "value":"Insertion"
      },
      {
        "key":"3",
        "value":"Reading"
      },
      {
        "key":"4",
        "value":"Deletion"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Two dimensional arrays are also called ?",
    "choices":[
      {
        "key":"1",
        "value":"Matrix Array"
      },
      {
        "key":"2",
        "value":"Table Array"
      },
      {
        "key":"3",
        "value":"Both Matrix Array and Table Array"
      },
      {
        "key":"4",
        "value":"None of the Above"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Two main measures for the efficiency of an algorithm are",
    "choices":[
      {
        "key":"1",
        "value":"Processor and memory"
      },
      {
        "key":"2",
        "value":"Complexity and capacity"
      },
      {
        "key":"3",
        "value":"Time and space"
      },
      {
        "key":"4",
        "value":"Data and space"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The time factor when determining the efficiency of algorithm is measured by",
    "choices":[
      {
        "key":"1",
        "value":"Counting microseconds"
      },
      {
        "key":"2",
        "value":"Counting the number of key operations"
      },
      {
        "key":"3",
        "value":"Counting the number of statements"
      },
      {
        "key":"4",
        "value":"Counting the kilobytes of algorithm"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The space factor when determining the efficiency of algorithm is measured by",
    "choices":[
      {
        "key":"1",
        "value":"Counting the maximum memory needed by the algorithm"
      },
      {
        "key":"2",
        "value":"Counting the minimum memory needed by the algorithm"
      },
      {
        "key":"3",
        "value":"Counting the average memory needed by the algorithm"
      },
      {
        "key":"4",
        "value":"Counting the maximum disk space needed by the algorithm"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Which of the following case does not exist in complexity theory",
    "choices":[
      {
        "key":"1",
        "value":"Best case"
      },
      {
        "key":"2",
        "value":"Worst case"
      },
      {
        "key":"3",
        "value":"Average case"
      },
      {
        "key":"4",
        "value":"Null case"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The complexity of the average case of an algorithm is",
    "choices":[
      {
        "key":"1",
        "value":"Much more complicated to analyze than that of worst case"
      },
      {
        "key":"2",
        "value":"Much more simpler to analyze than that of worst case"
      },
      {
        "key":"3",
        "value":"Sometimes more complicated and some other times simpler than that of worst case"
      },
      {
        "key":"4",
        "value":"None or above"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The Worst case occur in linear search algorithm when",
    "choices":[
      {
        "key":"1",
        "value":"Item is somewhere in the middle of the array"
      },
      {
        "key":"2",
        "value":"Item is not in the array at all"
      },
      {
        "key":"3",
        "value":"Item is the last element in the array"
      },
      {
        "key":"4",
        "value":"Item is the last element in the array or is not there at all"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The Average case occur in linear search algorithm",
    "choices":[
      {
        "key":"1",
        "value":"When Item is somewhere in the middle of the array"
      },
      {
        "key":"2",
        "value":"When Item is not in the array at all"
      },
      {
        "key":"3",
        "value":"When Item is the last element in the array"
      },
      {
        "key":"4",
        "value":"When Item is the last element in the array or is not there at all"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The complexity of linear search algorithm is",
    "choices":[
      {
        "key":"1",
        "value":"O(n)"
      },
      {
        "key":"2",
        "value":"O(log n)"
      },
      {
        "key":"3",
        "value":"O(n2)"
      },
      {
        "key":"4",
        "value":"O(n log n)"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The indirect change of the values of a variable in one module by another module is called",
    "choices":[
      {
        "key":"1",
        "value":"internal change"
      },
      {
        "key":"2",
        "value":"inter-module change"
      },
      {
        "key":"3",
        "value":"side effect"
      },
      {
        "key":"4",
        "value":"side-module update"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Finding the location of the element with a given value is:",
    "choices":[
      {
        "key":"1",
        "value":"Traversal"
      },
      {
        "key":"2",
        "value":"Search"
      },
      {
        "key":"3",
        "value":"Sort"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Arrays are best data structures",
    "choices":[
      {
        "key":"1",
        "value":"for relatively permanent collections of data"
      },
      {
        "key":"2",
        "value":"for the size of the structure and the data in the structure are constantly changing"
      },
      {
        "key":"3",
        "value":"for both of above situation"
      },
      {
        "key":"4",
        "value":"for none of above situation"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Each array declaration need not give, implicitly or explicitly, the information about",
    "choices":[
      {
        "key":"1",
        "value":"the name of array"
      },
      {
        "key":"2",
        "value":"the data type of array"
      },
      {
        "key":"3",
        "value":"the first data from the set to be stored"
      },
      {
        "key":"4",
        "value":"the index set of the array"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The elements of an array are stored successively in memory cells because",
    "choices":[
      {
        "key":"1",
        "value":"by this way computer can keep track only the address of the first element and the addresses of other elements can be calculated"
      },
      {
        "key":"2",
        "value":"the architecture of computer memory does not allow arrays to store other than serially"
      },
      {
        "key":"3",
        "value":"both of above"
      },
      {
        "key":"4",
        "value":"none of above"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Identify the data structure which allows deletions at both ends of the list but insertion at only one end.",
    "choices":[
      {
        "key":"1",
        "value":"Input-restricted deque"
      },
      {
        "key":"2",
        "value":"Output-restricted deque"
      },
      {
        "key":"3",
        "value":"Priority queues"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"The indirect change of the values of a variable in one module by another module is called",
    "choices":[
      {
        "key":"1",
        "value":"internal change"
      },
      {
        "key":"2",
        "value":"inter-module change"
      },
      {
        "key":"3",
        "value":"side effect"
      },
      {
        "key":"4",
        "value":"side-module update"
      }
    ],
    "answer":"",
    "tag":""
  },
  {
    "type":"1",
    "content":"Which of the following algorithm design technique is used in the quick sort algorithm?",
    "choices":[
      {
        "key":"1",
        "value":"Dynamic programming"
      },
      {
        "key":"2",
        "value":"Backtracking"
      },
      {
        "key":"3",
        "value":"Divide and conquer"
      },
      {
        "key":"4",
        "value":"Greedy method"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"The number of swapping needed to sort numbers 8,22,7,9,31,19,5,13 in ascending order using bubble sort is ?",
    "choices":[
      {
        "key":"1",
        "value":"11"
      },
      {
        "key":"2",
        "value":"12"
      },
      {
        "key":"3",
        "value":"13"
      },
      {
        "key":"4",
        "value":"14"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"Merge sort uses ?",
    "choices":[
      {
        "key":"1",
        "value":"Divide and conquer strategy"
      },
      {
        "key":"2",
        "value":"Backtracking approach"
      },
      {
        "key":"3",
        "value":"Heuristic search"
      },
      {
        "key":"4",
        "value":"Greedy approach"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"Which of the following is useful in implementing quick sort?",
    "choices":[
      {
        "key":"1",
        "value":"Stack"
      },
      {
        "key":"2",
        "value":"Set"
      },
      {
        "key":"3",
        "value":"List"
      },
      {
        "key":"4",
        "value":"Queue"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"Queue can be used to implement ?",
    "choices":[
      {
        "key":"1",
        "value":"quick sort"
      },
      {
        "key":"2",
        "value":"merge sort"
      },
      {
        "key":"3",
        "value":"heap sort"
      },
      {
        "key":"4",
        "value":"insertion sort"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"Which is the fastest sorting algorithn to sort a list?",
    "choices":[
      {
        "key":"1",
        "value":"Quick sort"
      },
      {
        "key":"2",
        "value":"Bubble sort"
      },
      {
        "key":"3",
        "value":"Binary sort"
      },
      {
        "key":"4",
        "value":"Linear sort"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"A sorting algorithm which can prove to be a best time algorithm in one case and a worst time algorithm at other time?",
    "choices":[
      {
        "key":"1",
        "value":"Selection Sort"
      },
      {
        "key":"2",
        "value":"Heap Sort"
      },
      {
        "key":"3",
        "value":"Quick Sort"
      },
      {
        "key":"4",
        "value":"All of the above"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"As part of maintenance work, you are entrusted with the work of rearranging the library books in a shelf in proper order, at the end of each day. The ideal choice will be ?",
    "choices":[
      {
        "key":"1",
        "value":"Bubble sort"
      },
      {
        "key":"2",
        "value":"Insertion sort"
      },
      {
        "key":"3",
        "value":"Selection sort"
      },
      {
        "key":"4",
        "value":"Heap sort"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"The way a card game player arranges his cards as he picks them up one by one, is an example of ?",
    "choices":[
      {
        "key":"1",
        "value":"bubble sort"
      },
      {
        "key":"2",
        "value":"selection sort"
      },
      {
        "key":"3",
        "value":"insertion sort"
      },
      {
        "key":"4",
        "value":"merge sort"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"A machine needs a minimum of 100 sec to sort 1000 names by quicksort.The minimum time needed to sort 100 names will be approximately ?",
    "choices":[
      {
        "key":"1",
        "value":"50.2 sec"
      },
      {
        "key":"2",
        "value":"6.7 sec"
      },
      {
        "key":"3",
        "value":"72.7 sec"
      },
      {
        "key":"4",
        "value":"11.2 sec"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"A machine took 200 sec to sort 200 names, using bubble sort. In 800 sec, it can approximately sort ?",
    "choices":[
      {
        "key":"1",
        "value":"400 names"
      },
      {
        "key":"2",
        "value":"800 names"
      },
      {
        "key":"3",
        "value":"750 names"
      },
      {
        "key":"4",
        "value":"800 names"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"The complexity of Bubble sort algorithm is",
    "choices":[
      {
        "key":"1",
        "value":"O(n)"
      },
      {
        "key":"2",
        "value":"O(log n)"
      },
      {
        "key":"3",
        "value":"O($n^2$)"
      },
      {
        "key":"4",
        "value":"O(n log n)"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"The complexity of merge sort algorithm is",
    "choices":[
      {
        "key":"1",
        "value":"O(n)"
      },
      {
        "key":"2",
        "value":"O(log n)"
      },
      {
        "key":"3",
        "value":"O($n^2$)"
      },
      {
        "key":"4",
        "value":"O(n log n)"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"Which of the following sorting algorithm is of divide-and-conquer type?",
    "choices":[
      {
        "key":"1",
        "value":"Bubble sort"
      },
      {
        "key":"2",
        "value":"Insertion sort"
      },
      {
        "key":"3",
        "value":"Quick sort"
      },
      {
        "key":"4",
        "value":"All of above"
      }
    ],
    "answer":"",
    "tag":"Sorting"
  },
  {
    "type":"1",
    "content":"The number of possible ordered trees with three nodes A,B,C is?",
    "choices":[
      {
        "key":"1",
        "value":"16"
      },
      {
        "key":"2",
        "value":"12"
      },
      {
        "key":"3",
        "value":"6"
      },
      {
        "key":"4",
        "value":"10"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"Which of the following statement is true ?",
    "choices":[
      {
        "key":"1",
        "value":"Optimal binary search tree construction can be performed efficiently using dynamicprogramming."
      },
      {
        "key":"2",
        "value":"Breath first search cannot be used to find converted components of a graph."
      },
      {
        "key":"3",
        "value":"Given the prefix and post fix walks over a binary tree.The binary tree cannot be uniquely constructe"
      },
      {
        "key":"4",
        "value":"Depth first search can be used to find connected components of a grap"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The number of binary trees with 3 nodes which when traversed in post order gives the sequence A,B,C is ?",
    "choices":[
      {
        "key":"1",
        "value":"3"
      },
      {
        "key":"2",
        "value":"9"
      },
      {
        "key":"3",
        "value":"7"
      },
      {
        "key":"4",
        "value":"5"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"Insertion in a B tree starts from",
    "choices":[
      {
        "key":"1",
        "value":"Root node"
      },
      {
        "key":"2",
        "value":"any node"
      },
      {
        "key":"3",
        "value":"could be root node or any node"
      },
      {
        "key":"4",
        "value":"leaf node"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"Which of the following below are applications of B-tree’s?",
    "choices":[
      {
        "key":"1",
        "value":"Databases"
      },
      {
        "key":"2",
        "value":"File systems"
      },
      {
        "key":"3",
        "value":"Both databases and file systems"
      },
      {
        "key":"4",
        "value":"Memory"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"A minimum spanning tree is a spanning tree organized so that the total ___ between node is minimized",
    "choices":[
      {
        "key":"1",
        "value":" edge size"
      },
      {
        "key":"2",
        "value":"edge height"
      },
      {
        "key":"3",
        "value":"edge width"
      },
      {
        "key":"4",
        "value":"edge weight"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"B-Tree is an acronym for Binary Tree",
    "choices":[
      {
        "key":"1",
        "value":"TRUE"
      },
      {
        "key":"2",
        "value":"FALSE"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"R-tree’s are typically used in which in a way differs from B tree?",
    "choices":[
      {
        "key":"1",
        "value":"Spatial access methods"
      },
      {
        "key":"2",
        "value":"Vectors"
      },
      {
        "key":"3",
        "value":"Both Spatial access methods and Vectors"
      },
      {
        "key":"4",
        "value":"FAT"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The complexity of binary search algorithm is ?",
    "choices":[
      {
        "key":"1",
        "value":"n"
      },
      {
        "key":"2",
        "value":"$nlong_{n}$"
      },
      {
        "key":"3",
        "value":"$lon_{n}$"
      },
      {
        "key":"4",
        "value":"$n^2$"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The postfix equivalent of the prefix * + ab - cd is ?",
    "choices":[
      {
        "key":"1",
        "value":"ab + cd - *"
      },
      {
        "key":"2",
        "value":"abcd + - *"
      },
      {
        "key":"3",
        "value":"ab + cd * -"
      },
      {
        "key":"4",
        "value":"ab + - cd *"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The number of binary trees with 3 nodes which when traversed in post order gives the sequence A,B,C is ?",
    "choices":[
      {
        "key":"1",
        "value":"3"
      },
      {
        "key":"2",
        "value":"9"
      },
      {
        "key":"3",
        "value":"7"
      },
      {
        "key":"4",
        "value":"5"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"A binary tree that has n leaf nodes. The number of nodes of degree 2 in this tree is ?",
    "choices":[
      {
        "key":"1",
        "value":"$log_{2}n$"
      },
      {
        "key":"2",
        "value":"n - 1"
      },
      {
        "key":"3",
        "value":"n"
      },
      {
        "key":"4",
        "value":"$2^n$"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The restriction while using the binary search is ?",
    "choices":[
      {
        "key":"1",
        "value":"List should be small in number"
      },
      {
        "key":"2",
        "value":"List should be large in number"
      },
      {
        "key":"3",
        "value":"List should be sorted"
      },
      {
        "key":"4",
        "value":"No restriction"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The operation of processing element is called ?",
    "choices":[
      {
        "key":"1",
        "value":"Traversing"
      },
      {
        "key":"2",
        "value":"Inserting"
      },
      {
        "key":"3",
        "value":"Deleting"
      },
      {
        "key":"4",
        "value":"Searching"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The complexity of Binary search algorithm is",
    "choices":[
      {
        "key":"1",
        "value":"O(n)"
      },
      {
        "key":"2",
        "value":"O(log )"
      },
      {
        "key":"3",
        "value":"O($n^2$)"
      },
      {
        "key":"4",
        "value":"O(n log n)"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The in order traversal of tree will yield a sorted listing of elements of tree in",
    "choices":[
      {
        "key":"1",
        "value":"Binary trees"
      },
      {
        "key":"2",
        "value":"Binary search trees"
      },
      {
        "key":"3",
        "value":"Heaps"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The post order traversal of a binary tree is DEBFCA. Find out the pre order traversal",
    "choices":[
      {
        "key":"1",
        "value":"ABFCDE"
      },
      {
        "key":"2",
        "value":"ADBFEC"
      },
      {
        "key":"3",
        "value":"ABDECF"
      },
      {
        "key":"4",
        "value":"ABDCEF"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"A binary tree whose every node has either zero or two children is called",
    "choices":[
      {
        "key":"1",
        "value":"Complete binary tree"
      },
      {
        "key":"2",
        "value":"Binary search tree"
      },
      {
        "key":"3",
        "value":"Extended binary tree"
      },
      {
        "key":"4",
        "value":"D. None of above"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The depth of a complete binary tree is given by",
    "choices":[
      {
        "key":"1",
        "value":"$D_{n} = n log_{2} n$"
      },
      {
        "key":"2",
        "value":"$D_{n} = n log_{2} n + 1$"
      },
      {
        "key":"3",
        "value":"$D_{n} = log_{2} n$"
      },
      {
        "key":"4",
        "value":"$D_{n} = log_{2} n + 1$"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"When representing any algebraic expression E which uses only binary operations in a 2-tree,",
    "choices":[
      {
        "key":"1",
        "value":"the variable in E will appear as external nodes and operations in internal nodes"
      },
      {
        "key":"2",
        "value":"the operations in E will appear as external nodes and variables in internal nodes"
      },
      {
        "key":"3",
        "value":"the variables and operations in E will appear only in internal nodes"
      },
      {
        "key":"4",
        "value":"the variables and operations in E will appear only in external nodes"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"A binary tree can easily be converted into q 2-tree",
    "choices":[
      {
        "key":"1",
        "value":"by replacing each empty sub tree by a new internal node"
      },
      {
        "key":"2",
        "value":"by inserting an internal nodes for non-empty node"
      },
      {
        "key":"3",
        "value":"by inserting an external nodes for non-empty node"
      },
      {
        "key":"4",
        "value":"by replacing each empty sub tree by a new external node"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"When converting binary tree into extended binary tree, all the original nodes in binary tree are",
    "choices":[
      {
        "key":"1",
        "value":"internal nodes on extended tree"
      },
      {
        "key":"2",
        "value":"external nodes on extended tree"
      },
      {
        "key":"3",
        "value":"vanished on extended tree"
      },
      {
        "key":"4",
        "value":"None of above"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"Which data structure allows deleting data elements from front and inserting at rear?",
    "choices":[
      {
        "key":"1",
        "value":"Stacks"
      },
      {
        "key":"2",
        "value":"Queues"
      },
      {
        "key":"3",
        "value":"Deques"
      },
      {
        "key":"4",
        "value":"Binary search tree"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"To represent hierarchical relationship between elements, which data structure is suitable?",
    "choices":[
      {
        "key":"1",
        "value":"Deque"
      },
      {
        "key":"2",
        "value":"Priority"
      },
      {
        "key":"3",
        "value":"Tree"
      },
      {
        "key":"4",
        "value":"All of above"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"In a binary tree, certain null entries are replaced by special pointers which point to nodes higher in the tree for efficiency. These special pointers are called",
    "choices":[
      {
        "key":"1",
        "value":"Leaf"
      },
      {
        "key":"2",
        "value":"branch"
      },
      {
        "key":"3",
        "value":"path"
      },
      {
        "key":"4",
        "value":"thread"
      }
    ],
    "answer":"",
    "tag":"Tree"
  },
  {
    "type":"1",
    "content":"The restriction while using the binary search is ?",
    "choices":[
      {
        "key":"1",
        "value":"List should be small in number"
      },
      {
        "key":"2",
        "value":"List should be large in number"
      },
      {
        "key":"3",
        "value":"List should be sorted"
      },
      {
        "key":"4",
        "value":"No restriction"
      }
    ],
    "answer":"",
    "tag":"Tree"
  }
]